/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int dfsWithParent(TreeNode* root, TreeNode* parent, TreeNode* grandParent){
        if(root == NULL) return 0;
        int ans = 0;
        int leftsum = dfsWithParent(root->left,root,parent);
        int rightsum = dfsWithParent(root->right,root,parent);
        ans = leftsum + rightsum;
        if(grandParent!=NULL && grandParent->val % 2 == 0){
            ans += root->val;
        }
        return ans;
    }
    int sumEvenGrandparent(TreeNode* root) {
        return dfsWithParent(root,NULL,NULL);
    }
};