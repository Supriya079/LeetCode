/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isSymmetric(TreeNode* root) {
      return ismirror(root->left,root->right)==1;  
    }
    
    int ismirror(TreeNode*root1,TreeNode*root2)  //for comparing two tree
    {
        if(!root1&&!root2)
            return 1;
        
        if(!root1||!root2)
            return 0;
        
        return root1->val==root2->val&&ismirror(root1->left,root2->right)&&ismirror(root1->right,root2->left);
    }
};