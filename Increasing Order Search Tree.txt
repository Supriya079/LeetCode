/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    void inorder(TreeNode* root, vector<TreeNode*>& data)
    {
        if(root)
        {
            inorder(root->left,data);
            data.push_back(root);
            inorder(root->right,data);
        }
    }
public:
    TreeNode* increasingBST(TreeNode* root) 
    {
        vector<TreeNode*> data;
        inorder(root,data);
        TreeNode* cur = data[0];
        data[0]->left = nullptr;
        data[0]->right = nullptr;
        for(int i = 1; i < data.size(); i++)
        {
            cur->right = data[i];
            data[i]->left = nullptr;
            data[i]->right = nullptr;
            cur = cur->right;
        }
        return data[0];
    }
};